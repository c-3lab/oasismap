version: "3.8"

services:
  backend:
    image: node:20.10.0
    hostname: backend
    container_name: backend
    working_dir: /app/backend
    ports:
      - "4000:4000"
    command: sleep infinity
    environment:
      - "API_PORT=4000"
      - "ORION_URI=http://orion:1026"
      - "ORION_FIWARE_SERVICE=Goverment"
      - "ORION_FIWARE_SERVICE_PATH=/Happiness"
      - "KEYCLOAK_CLIENT_ISSUER=${KEYCLOAK_CLIENT_ISSUER}"
      - "FRONTEND_URL=${NEXTAUTH_URL}"
      - "POSTGRES_HOST=postgres"
      - "POSTGRES_PORT=5432"
      - "POSTGRES_USER=${POSTGREUSER}"
      - "POSTGRES_PASSWORD=${POSTGREPASSWORD}"
      - "POSTGRES_DATABASE=cygnus"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend-network

  frontend:
    image: node:20.10.0
    hostname: frontend
    container_name: frontend
    working_dir: /app/frontend
    ports:
      - "3000:3000"
    command: sleep infinity
    environment:
      - "NEXTAUTH_URL=${NEXTAUTH_URL}"
      - "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}"
      - "NEXT_PUBLIC_MAP_DEFAULT_LATITUDE=${MAP_DEFAULT_LATITUDE}"
      - "NEXT_PUBLIC_MAP_DEFAULT_LONGITUDE=${MAP_DEFAULT_LONGITUDE}"
      - "NEXT_PUBLIC_MAP_DEFAULT_ZOOM=${MAP_DEFAULT_ZOOM}"
      - "NEXT_PUBLIC_DATASET_LIST_BY=${DATASET_LIST_BY}"
      - "NEXT_PUBLIC_BACKEND_URL=${BACKEND_URL}"
      - "GENERAL_USER_KEYCLOAK_CLIENT_ID=${GENERAL_USER_KEYCLOAK_CLIENT_ID}"
      - "GENERAL_USER_KEYCLOAK_CLIENT_SECRET=${GENERAL_USER_KEYCLOAK_CLIENT_SECRET}"
      - "ADMIN_KEYCLOAK_CLIENT_ID=${ADMIN_KEYCLOAK_CLIENT_ID}"
      - "ADMIN_KEYCLOAK_CLIENT_SECRET=${ADMIN_KEYCLOAK_CLIENT_SECRET}"
      - "KEYCLOAK_CLIENT_ISSUER=${KEYCLOAK_CLIENT_ISSUER}"
    volumes:
      - ./frontend/:/app/frontend/
    networks:
      - frontend-network

  dummybackend:
    build: "./dummyBackend"
    container_name: dummybackend
    working_dir: '/root/app'
    ports:
      - "8000:8000"
    tty: true
    volumes:
      - ./dummyBackend:/root/app
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - frontend-network
      
  mongo:
    image: mongo:6.0.14
    hostname: mongo
    container_name: mongo
    expose:
      - "27017"
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=${MONGOUSERNAME}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGOPASSWORD}"
      - "MONGO_INITDB_DATABASE=oriondb"
    volumes:
      - ./site/mongo/db:/data/db
      - ./site/mongo/configdb:/data/configdb
    networks:
      - backend-network

  orion:
    image: fiware/orion:3.11.0
    hostname: orion
    container_name: orion
    ports:
      - "1026:1026"
    expose:
      - "1026"
    depends_on:
      - mongo
    environment:
      - "ORION_MONGO_HOST=mongo:27017"
      - "ORION_MONGO_USER=${MONGOUSERNAME}"
      - "ORION_MONGO_PASSWORD=${MONGOPASSWORD}"
      - "ORION_MONGO_AUTH_SOURCE=admin"
      - "ORION_MONGO_DB=oriondb"
      - "ORION_PORT=1026"
      - "ORION_MULTI_SERVICE=true"
    networks:
      - backend-network
    healthcheck:
      test: "curl -f http://orion:1026/version"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  postgres:
    image: postgres:16.1
    hostname: postgres
    expose:
      - "5432"
    container_name: postgres
    environment:
      - "POSTGRES_USER=${POSTGREUSER}"
      - "POSTGRES_PASSWORD=${POSTGREPASSWORD}"
      - "POSTGRES_DB=postgres"
      - "PGPASSWORD=${POSTGREPASSWORD}"
      - "PGUSER=${POSTGREUSER}"
      - "PGDATABASE=postgres"
    volumes:
      - ./site/postgres/data:/var/lib/postgresql/data
      - ./setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network
    healthcheck:
      test: "psql -U ${POSTGREUSER}"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  cygnus:
    image: fiware/cygnus-ngsi:3.5.0
    hostname: cygnus
    container_name: cygnus
    depends_on:
      - postgres
    ports:
        - "5055:5055"
        - "5080:5080"
    environment:
      - "CYGNUS_POSTGRESQL_HOST=postgres"
      - "CYGNUS_POSTGRESQL_PORT=5432"
      - "CYGNUS_POSTGRESQL_USER=${POSTGREUSER}"
      - "CYGNUS_POSTGRESQL_PASS=${POSTGREPASSWORD}"
      - "CYGNUS_POSTGRESQL_ENABLE_CACHE=true"
      - "CYGNUS_POSTGRESQL_SERVICE_PORT=5055"
      - "CYGNUS_POSTGRESQL_DATABASE=cygnus"
      - "CYGNUS_POSTGRESQL_DATA_MODEL=dm-by-service-path"
      - "CYGNUS_POSTGRESQL_ATTR_PERSISTENCE=column"
      - "CYGNUS_LOG_LEVEL=DEBUG"
      - "CYGNUS_SERVICE_PORT=5055"
      - "CYGNUS_API_PORT=5080"
    networks:
      - backend-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    hostname: keycloak
    container_name: keycloak
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - "KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}" 
      - "KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}"
      - "KC_DB=postgres"
      - "KC_DB_URL=jdbc:postgresql://postgres:5432/postgres"
      - "KC_DB_USERNAME=${POSTGREUSER}"
      - "KC_DB_PASSWORD=${POSTGREPASSWORD}"
      - "KC_HOSTNAME_URL=${KC_HOSTNAME_URL}"
      - "KC_HOSTNAME_ADMIN_URL=${KC_HOSTNAME_ADMIN_URL}"
      - "TZ=Asia/Tokyo"
    command: start-dev --features=declarative-user-profile
    volumes:
      - ./keycloak/themes:/opt/keycloak/themes
    networks:
      - backend-network
    healthcheck:
      test: "echo > /dev/tcp/localhost/8080"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
