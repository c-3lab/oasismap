version: "3.8"

services:
  backend:
    image: node:20.10.0
    hostname: backend
    container_name: backend
    working_dir: /app/backend
    ports:
      - "4000:4000"
    command: sleep infinity
    environment:
      - "API_PORT=4000"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend-network

  frontend:
    image: node:20.10.0
    hostname: frontend
    container_name: frontend
    working_dir: /app/frontend
    ports:
      - "3000:3000"
    command: sleep infinity
    environment:
      - "NEXT_PUBLIC_MAP_DEFAULT_LATITUDE=${MAP_DEFAULT_LATITUDE}"
      - "NEXT_PUBLIC_MAP_DEFAULT_LONGITUDE=${MAP_DEFAULT_LONGITUDE}"
      - "NEXT_PUBLIC_MAP_DEFAULT_ZOOM=${MAP_DEFAULT_ZOOM}"
      - "NEXT_PUBLIC_DATASET_LIST_BY=${DATASET_LIST_BY}"
    volumes:
      - ./frontend/:/app/frontend/
    networks:
      - frontend-network

  dummybackend:
    build: "./dummyBackend"
    container_name: dummybackend
    working_dir: '/root/app'
    ports:
      - "8000:8000"
    tty: true
    volumes:
      - ./dummyBackend:/root/app
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - frontend-network

  postgres:
    image: postgres:16.1
    hostname: postgres
    expose:
      - "5432"
    container_name: postgres
    environment:
      - "POSTGRES_USER=${POSTGREUSER}"
      - "POSTGRES_PASSWORD=${POSTGREPASSWORD}"
      - "POSTGRES_DB=postgres"
      - "PGPASSWORD=${POSTGREPASSWORD}"
      - "PGUSER=${POSTGREUSER}"
      - "PGDATABASE=postgres"
    volumes:
      - ./site/postgres/data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: "psql -U ${POSTGREUSER}"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    hostname: keycloak
    container_name: keycloak
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - "KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}" 
      - "KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}"
      - "KC_DB=postgres"
      - "KC_DB_URL=jdbc:postgresql://postgres:5432/postgres"
      - "KC_DB_USERNAME=${POSTGREUSER}"
      - "KC_DB_PASSWORD=${POSTGREPASSWORD}"
      - "KC_HOSTNAME_URL=${KC_HOSTNAME_URL}"
      - "KC_HOSTNAME_ADMIN_URL=${KC_HOSTNAME_ADMIN_URL}"
      - "TZ=Asia/Tokyo"
    command: start-dev --features=declarative-user-profile
    networks:
      - backend-network
    healthcheck:
      test: "echo > /dev/tcp/localhost/8080"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
